

public class task1_2 {
	private int[] array;

	public task1_2(int[] array) {
		this.array = array;
	}

	// To find the index of the target in the sorted array. If the
	// target is not found in the array, then the method returns -1.
	public int iterativeBinarySearch(int target) { 
		
		    int left = 0;
		    int right = array.length - 1;

		    while (left <= right) {
		        int mid = left + (right - left) / 2;

		        if (array[mid] == target) {
		            return mid; // Target found, return the index.
		        } else if (array[mid] < target) {
		            left = mid + 1; // Target is in the right half.
		        } else {
		            right = mid - 1; // Target is in the left half.
		        }
		    }

		    return -1; // Target not found in the array.
		}


	// To find the index of the target in the sorted array. If the target is not
	// found in the array, then the method returns -1.
	public int recursiveBinarySearch(int target, int low, int hight) { 
		if(low > hight)
			return -1;
		else {
			int mid=(low+hight)/2;
			if(target == array[mid])
				return target;
			else if(target< array[mid])
				return recursiveBinarySearch(target, low, mid-1);
			else
				return recursiveBinarySearch(target, mid+1, hight);
		}
	}
}
